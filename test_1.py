
#
# settings={"ticks": 100, "runs": 3, "disable_mods": true, "skipticks": 20, "map_regex": "**\\car_belt\\*", "factorio_bin": null, "filenames": null, "filenames_dict": {}, "high_priority": true, "cpu_list": [0], "description": "JSON:[\"\"]", "delete_temp_folder": true, "plot_results": false}
# generated by benchmark_GUI.py
#

import os
import psutil
import json
import shutil
import benchmarker
import result_to_db

temporary_file = "temp_benchmark_GUI"


def start_test(
    ticks,
    runs,
    disable_mods,
    skipticks,
    map_regex,
    factorio_bin,
    filenames,
    high_priority,
    cpu_list,
    description,
    delete_temp_folder,
    plot_results,
):
    if os.path.exists(temporary_file):
        os.remove(temporary_file)
    out_json = None
    benchmark_result = []
    if not high_priority:
        cpu_list = [0]
    for cpu in cpu_list:
        if cpu == 0:
            cpu = psutil.cpu_count()
        print("CPUxALL" if cpu == 0 else "CPUx{0:02} ".format(cpu))
        folder = benchmarker.benchmark_folder(
            ticks=ticks,
            runs=runs,
            disable_mods=disable_mods,
            skipticks=skipticks,
            map_regex=map_regex,
            factorio_bin=factorio_bin,
            folder=None,
            filenames=filenames,
            high_priority=high_priority,
            cpu=cpu,
        )
        # read out.json
        with open(os.path.join(folder, "out.json"), "r") as f:
            out_json = json.loads(f.read())
            benchmark_result.extend(out_json["benchmark_result"])

    out_json["benchmark_result"] = benchmark_result
    outfile_json = json.dumps(out_json, indent=4)
    out_path = os.path.join(folder, "out.json")
    with open(out_path, "w") as outjson_file:
        outjson_file.write(outfile_json)
    result_to_db.result_to_db(folder, description=description)

    if plot_results:
        benchmarker.plot_benchmark_results(folder)
    elif delete_temp_folder:
        try:
            shutil.rmtree(folder)
        except OSError:
            pass


start_test(
    ticks=100,
    runs=3,
    disable_mods=True,
    skipticks=20,
    map_regex=r'**\car_belt\*',
    factorio_bin=None,
    filenames=None,
    high_priority=True,
    cpu_list=[0],
    description='JSON:[""]',
    delete_temp_folder=True,
    plot_results=False,
)


